# Trigger a release when a tag is pushed that starts with v then some number.
on:
  push:
    tags:
      - 'v[0-9]+.*'

name: Release

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # Needed for creating releases

    strategy:
      matrix:
        include:
        - build: linux
          os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          name: x86_64-linux
        - build: macos
          os: macos-12
          rust: stable
          target: x86_64-apple-darwin
          name: x86_64-macos
        - build: win-msvc
          os: windows-2022
          rust: stable
          target: x86_64-pc-windows-msvc
          name: x86_64-windows


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@stable

    # - name: Extract release notes
    #   shell: bash
    #   run: |
    #     awk "/# Version ${GITHUB_REF_NAME#v}/{flag=1; next} /^$/{flag=0} flag" RELEASE_NOTES.md >REL.md

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create tarballs (Unix)
      if: matrix.build == 'linux' || matrix.build == 'macos' || matrix.build == 'linux-arm' || matrix.build == 'macos-arm'
      run: |
        n="fshare-${{ github.ref_name }}-${{ matrix.name }}"
        cp "target/${{ matrix.target }}/release/fshare" "$n"
    
    - name: Create tarballs (Windows)
      if :  matrix.build == 'win-msvc'
      run: |
        n="fshare-${{ github.ref_name }}-${{ matrix.name }}.exe"
        cp "target/${{ matrix.target }}/release/fshare.exe" "$n"


    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        # body_path: REL.md
        files: |
          fshare-v*
